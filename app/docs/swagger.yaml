basePath: /
definitions:
  request.UserCountAddRequest:
    properties:
      count:
        type: integer
    type: object
  request.UserCreateRequest:
    properties:
      name:
        type: string
    type: object
  response.UserCountAddResponse:
    properties:
      count:
        type: integer
    type: object
  response.UserCreateResponse:
    properties:
      token:
        type: string
    type: object
  response.UserDestroyResponse:
    properties:
      message:
        type: string
    type: object
  response.UserGetResponse:
    properties:
      count:
        type: integer
      id:
        type: string
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: My Go Backend Template
  title: Go Backend Template
  version: "1.0"
paths:
  /user/count:
    post:
      consumes:
      - application/json
      description: ユーザーのカウントを追加します
      parameters:
      - description: UserCountAddRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UserCountAddRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserCountAddResponse'
      security:
      - ApiKeyAuth: []
      summary: ユーザーのカウントを追加
      tags:
      - user
  /user/create:
    post:
      consumes:
      - application/json
      description: ユーザーを作成します
      parameters:
      - description: UserCreateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UserCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserCreateResponse'
      summary: ユーザーの作成
      tags:
      - user
  /user/destroy:
    post:
      consumes:
      - application/json
      description: ユーザーを削除します
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserDestroyResponse'
      security:
      - ApiKeyAuth: []
      summary: ユーザーの削除
      tags:
      - user
  /user/get:
    post:
      consumes:
      - application/json
      description: ユーザーを取得します
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserGetResponse'
      security:
      - ApiKeyAuth: []
      summary: ユーザーの取得
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: x-token
    type: apiKey
swagger: "2.0"
